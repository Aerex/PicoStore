import json

src = 'src'
err = 'err'
msg = 'msg'
col = 'col'
usr = 'usr'
doc = 'doc'
res = 'res'

class Error(Exception):
	error = {}
	


	ERROR = {}

	UNKNOWN_FAILURE = -100
	DATABASE_ERROR_WHILE_INSERTING = -76
	OS_SECURITY_FAILURE = -75
	PERSISTENT_STORE_NOT_OPEN = -50
	FIPS_ENABLEMENT_FAILURE = -40
	TRANSACTION_IN_PROGRESS = -41
	NO_TRANSACTION_IN_PROGRESS = -42
	TRANSACTION_FAILURE = -43
	TRANSACTION_FAILURE_DURING_INIT = -44
	TRANSACTION_FAILURE_DURING_CLOSE_ALL = -45
	TRANSACTION_FAILURE_DURING_DESTROY = -46
	TRANSACTION_FAILURE_DURING_REMOVE_COLLECTION = -47
	TRANSACTION_FAILURE_DURING_ROLLBACK = -48

	DESTROY_FAILED_FILE_ERROR = -18
	DESTROY_FAILED_METADATA_REMOVAL_FAILURE = -19

	JSON_STORE_INVALID_JSON_STRUCTURE = -20
	JSON_STORE_STORE_DATA_PROTECTION_KEY_FAILURE = -21
	JSON_STORE_REMOVE_WITH_QUERIES_FAILURE = -22
	JSON_STORE_REPLACE_DOCUMENTS_FAILURE = -23
	JSON_STORE_FILE_INFO_ERROR = -24
	INVALID_SEARCH_FIELD_TYPES = -12
	OPERATION_FAILED_ON_SPECIFIC_DOCUMENT = -11
	ACCEPT_CONDITION_FAILED = -10
	OFFSET_WITHOUT_LIMIT = -9
	INVALID_LIMIT_OR_OFFSET = -8
	INVALID_USERNAME = -7
	USERNAME_MISMATCH_DETECTED = -6
	DESTROY_REMOVE_PERSISTENT_STORE_FAILED = -5
	DESTROY_REMOVE_KEYS_FAILED = -4
	INVALID_KEY_ON_PROVISION = -3
	PROVISION_TABLE_SEARCH_FIELDS_MISMATCH = -2
	PERSISTENT_STORE_FAILURE = -1
	SUCCESS = 0
	BAD_PARAMETER_EXPECTED_INT = 1
	BAD_PARAMETER_EXPECTED_STRING = 2
	BAD_PARAMETER_EXPECTED_FUNCTION = 3
	BAD_PARAMETER_EXPECTED_ALPHANUMERIC_STRING = 4
	BAD_PARAMETER_EXPECTED_OBJECT = 5
	BAD_PARAMETER_EXPECTED_SIMPLE_OBJECT = 6
	BAD_PARAMETER_EXPECTED_DOCUMENT = 7
	FAILED_TO_GET_UNPUSHED_DOCUMENTS_FROM_DB = 8
	NO_ADAPTER_LINKED_TO_COLLECTION = 9
	BAD_PARAMETER_EXPECTED_DOCUMENT_OR_ARRAY_OF_DOCUMENTS = 10
	INVALID_PASSWORD_EXPECTED_ALPHANUMERIC_STRING_WITH_LENGTH_GREATER_THAN_ZERO = 11
	ADAPTER_FAILURE = 12
	BAD_PARAMETER_EXPECTED_DOCUMENT_OR_ID = 13
	CAN_NOT_REPLACE_DEFAULT_FUNCTIONS = 14
	COULD_NOT_MARK_DOCUMENT_PUSHED = 15
	COULD_NOT_GET_SECURE_KEY = 16
	FAILED_TO_LOAD_INITIAL_DATA_FROM_ADAPTER = 17
	FAILED_TO_LOAD_INITIAL_DATA_FROM_ADAPTER_INVALID_LOAD_OBJ = 18
	INVALID_KEY_IN_LOAD_OBJECT = 19
	UNDEFINED_PUSH_OPERATION = 20
	INVALID_ADD_INDEX_KEY = 21
	INVALID_SEARCH_FIELD = 22
	ERROR_CLOSING_ALL = 23
	ERROR_CHANGING_PASSWORD = 24
	ERROR_DURING_DESTROY = 25
	ERROR_CLEARING_COLLECTION = 26
	INVALID_PARAMETER_FOR_FIND_BY_ID = 27
	INVALID_SORT_OBJECT = 28
	INVALID_FILTER_ARRAY = 29
	BAD_PARAMETER_EXPECTED_ARRAY_OF_OBJECTS = 30
	BAD_PARAMETER_EXPECTED_ARRAY_OF_CLEAN_DOCUMENTS = 31
	BAD_PARAMETER_WRONG_SEARCH_CRITERIA = 32
	ERROR_DURING_COUNT = 38

	ERROR[UNKNOWN_FAILURE] = 'UNKNOWN_FAILURE'
	ERROR[DATABASE_ERROR_WHILE_INSERTING] = 'DATABASE_ERROR_WHILE_INSERTING'
	ERROR[OS_SECURITY_FAILURE] = 'OS_SECURITY_FAILURE'
	ERROR[PERSISTENT_STORE_NOT_OPEN] = 'PERSISTENT_STORE_NOT_OPEN'
	ERROR[FIPS_ENABLEMENT_FAILURE] = 'FIPS_ENABLEMENT_FAILURE'
	ERROR[TRANSACTION_IN_PROGRESS] = 'TRANSACTION_IN_PROGRESS'
	ERROR[NO_TRANSACTION_IN_PROGRESS] = 'NO_TRANSACTION_IN_PROGRESS'
	ERROR[TRANSACTION_FAILURE] = 'TRANSACTION_FAILURE'
	ERROR[TRANSACTION_FAILURE_DURING_INIT] = 'TRANSACTION_FAILURE_DURING_INIT'
	ERROR[TRANSACTION_FAILURE_DURING_CLOSE_ALL] = 'TRANSACTION_FAILURE_DURING_CLOSE_ALL'
	ERROR[TRANSACTION_FAILURE_DURING_DESTROY] = 'TRANSACTION_FAILURE_DURING_DESTROY'
	ERROR[TRANSACTION_FAILURE_DURING_ROLLBACK] = 'TRANSACTION_FAILURE_DURING_ROLLBACK'

	ERROR[DESTROY_FAILED_FILE_ERROR] = 'DESTROY_FAILED_FILE_ERROR'
	ERROR[DESTROY_FAILED_METADATA_REMOVAL_FAILURE] = 'DESTROY_FAILED_METADATA_REMOVAL_FAILURE'

	ERROR[JSON_STORE_INVALID_JSON_STRUCTURE] = 'JSON_STORE_INVALID_JSON_STRUCTURE'
	ERROR[JSON_STORE_STORE_DATA_PROTECTION_KEY_FAILURE] = 'JSON_STORE_STORE_DATA_PROTECTION_KEY_FAILURE'
	ERROR[JSON_STORE_REMOVE_WITH_QUERIES_FAILURE] = 'JSON_STORE_REMOVE_WITH_QUERIES_FAILURE'
	ERROR[JSON_STORE_REPLACE_DOCUMENTS_FAILURE] = 'JSON_STORE_REPLACE_DOCUMENTS_FAILURE'
	ERROR[JSON_STORE_FILE_INFO_ERROR] = 'JSON_STORE_FILE_INFO_ERROR'
	ERROR[TRANSACTION_FAILURE_DURING_REMOVE_COLLECTION] = 'TRANSACTION_FAILURE_DURING_REMOVE_COLLECTION'
	ERROR[INVALID_SEARCH_FIELD_TYPES] = 'INVALID_SEARCH_FIELD_TYPES'
	ERROR[OPERATION_FAILED_ON_SPECIFIC_DOCUMENT] = 'OPERATION_FAILED_ON_SPECIFIC_DOCUMENT'
	ERROR[ACCEPT_CONDITION_FAILED] = 'ACCEPT_CONDITION_FAILED'
	ERROR[OFFSET_WITHOUT_LIMIT] = 'OFFSET_WITHOUT_LIMIT'
	ERROR[INVALID_LIMIT_OR_OFFSET] = 'INVALID_LIMIT_OR_OFFSET'
	ERROR[INVALID_USERNAME] = 'INVALID_USERNAME'
	ERROR[USERNAME_MISMATCH_DETECTED] = 'USERNAME_MISMATCH_DETECTED'
	ERROR[DESTROY_REMOVE_PERSISTENT_STORE_FAILED] = 'DESTROY_REMOVE_PERSISTENT_STORE_FAILED'
	ERROR[DESTROY_REMOVE_KEYS_FAILED] = 'DESTROY_REMOVE_KEYS_FAILED'
	ERROR[INVALID_KEY_ON_PROVISION] = 'INVALID_KEY_ON_PROVISION'
	ERROR[PROVISION_TABLE_SEARCH_FIELDS_MISMATCH] = 'PROVISION_TABLE_SEARCH_FIELDS_MISMATCH'
	ERROR[PERSISTENT_STORE_FAILURE] = 'PERSISTENT_STORE_FAILURE'
	ERROR[SUCCESS] = 'SUCCESS'
	ERROR[BAD_PARAMETER_EXPECTED_INT] = 'BAD_PARAMETER_EXPECTED_INT'
	ERROR[BAD_PARAMETER_EXPECTED_STRING] = 'BAD_PARAMETER_EXPECTED_STRING'
	ERROR[BAD_PARAMETER_EXPECTED_FUNCTION] = 'BAD_PARAMETER_EXPECTED_FUNCTION'
	ERROR[BAD_PARAMETER_EXPECTED_ALPHANUMERIC_STRING] = 'BAD_PARAMETER_EXPECTED_ALPHANUMERIC_STRING'
	ERROR[BAD_PARAMETER_EXPECTED_OBJECT] = 'BAD_PARAMETER_EXPECTED_OBJECT'
	ERROR[BAD_PARAMETER_EXPECTED_SIMPLE_OBJECT] = 'BAD_PARAMETER_EXPECTED_SIMPLE_OBJECT'
	ERROR[BAD_PARAMETER_EXPECTED_DOCUMENT] = 'BAD_PARAMETER_EXPECTED_DOCUMENT'
	ERROR[FAILED_TO_GET_UNPUSHED_DOCUMENTS_FROM_DB] = 'FAILED_TO_GET_UNPUSHED_DOCUMENTS_FROM_DB'
	ERROR[NO_ADAPTER_LINKED_TO_COLLECTION] = 'NO_ADAPTER_LINKED_TO_COLLECTION'
	ERROR[BAD_PARAMETER_EXPECTED_DOCUMENT_OR_ARRAY_OF_DOCUMENTS] = 'BAD_PARAMETER_EXPECTED_DOCUMENT_OR_ARRAY_OF_DOCUMENTS'
	ERROR[INVALID_PASSWORD_EXPECTED_ALPHANUMERIC_STRING_WITH_LENGTH_GREATER_THAN_ZERO] = 'INVALID_PASSWORD_EXPECTED_ALPHANUMERIC_STRING_WITH_LENGTH_GREATER_THAN_ZERO'
	ERROR[ADAPTER_FAILURE] = 'ADAPTER_FAILURE'
	ERROR[BAD_PARAMETER_EXPECTED_DOCUMENT_OR_ID] = 'BAD_PARAMETER_EXPECTED_DOCUMENT_OR_ID'
	ERROR[CAN_NOT_REPLACE_DEFAULT_FUNCTIONS] = 'CAN_NOT_REPLACE_DEFAULT_FUNCTIONS'
	ERROR[COULD_NOT_MARK_DOCUMENT_PUSHED] = 'COULD_NOT_MARK_DOCUMENT_PUSHED'
	ERROR[COULD_NOT_GET_SECURE_KEY] = 'COULD_NOT_GET_SECURE_KEY'
	ERROR[FAILED_TO_LOAD_INITIAL_DATA_FROM_ADAPTER] = 'FAILED_TO_LOAD_INITIAL_DATA_FROM_ADAPTER'
	ERROR[FAILED_TO_LOAD_INITIAL_DATA_FROM_ADAPTER_INVALID_LOAD_OBJ] = 'FAILED_TO_LOAD_INITIAL_DATA_FROM_ADAPTER_INVALID_LOAD_OBJ'
	ERROR[INVALID_KEY_IN_LOAD_OBJECT] = 'INVALID_KEY_IN_LOAD_OBJECT'
	ERROR[UNDEFINED_PUSH_OPERATION] = 'UNDEFINED_PUSH_OPERATION'
	ERROR[INVALID_ADD_INDEX_KEY] = 'INVALID_ADD_INDEX_KEY'
	ERROR[INVALID_SEARCH_FIELD] = 'INVALID_SEARCH_FIELD'
	ERROR[ERROR_CLOSING_ALL] = 'ERROR_CLOSING_ALL'
	ERROR[ERROR_CHANGING_PASSWORD] = 'ERROR_CHANGING_PASSWORD'
	ERROR[ERROR_DURING_DESTROY] = 'ERROR_DURING_DESTROY'
	ERROR[ERROR_CLEARING_COLLECTION] = 'ERROR_CLEARING_COLLECTION'
	ERROR[INVALID_PARAMETER_FOR_FIND_BY_ID] = 'INVALID_PARAMETER_FOR_FIND_BY_ID'
	ERROR[INVALID_SORT_OBJECT] = 'INVALID_SORT_OBJECT'
	ERROR[INVALID_FILTER_ARRAY] = 'INVALID_FILTER_ARRAY'
	ERROR[BAD_PARAMETER_EXPECTED_ARRAY_OF_OBJECTS] = 'BAD_PARAMETER_EXPECTED_ARRAY_OF_OBJECTS'
	ERROR[BAD_PARAMETER_EXPECTED_ARRAY_OF_CLEAN_DOCUMENTS] = 'BAD_PARAMETER_EXPECTED_ARRAY_OF_CLEAN_DOCUMENTS'
	ERROR[BAD_PARAMETER_WRONG_SEARCH_CRITERIA] = 'BAD_PARAMETER_WRONG_SEARCH_CRITERIA'
	ERROR[ERROR_DURING_COUNT] = 'ERROR_DURING_COUNT'



	def __init__(self, obj):
		if not type(obj) is dict:
			raise self.Error, 'must pass in object'
		self.error[src] = obj[src] if obj and obj.has_key(src) else ''
		self.error[err] = obj[err] if obj and obj.has_key(err) else self.UNKNOWN_FAILURE
		self.error[msg] = obj[msg] if obj and obj.has_key(msg) else self.ERROR[self.error[err]]
		self.error[col] = obj[col] if obj and obj.has_key(col) else ''
		self.error[usr] = obj[usr] if obj and obj.has_key(usr) else 'jsonstore'
		self.error[doc] = obj[doc] if obj and obj.has_key(doc) else {}
		self.error[res] = obj[res] if obj and obj.has_key(res) else {}

	def toString(self):
		return json.dumps(self.error, sort_keys=True,
                  indent=4, separators=(',', ': '))

	def getErrorObject(self):
		return self.error

